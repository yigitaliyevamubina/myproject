services:

  db:
    container_name: postgresdb
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 20030505
      POSTGRES_DB: dennic
      PGDATA: /data/postgres/new
    volumes:
      - db:/data/postgres/dennic
    ports:
      - "5432:5432"
    networks:
      - db

  dennic_booking_service:
    container_name: dennic_booking_service
    build: ./dennic_booking_service
    depends_on:
      - "db"
    ports:
      - "9090:9090"
    networks:
      - db

  redisdb:
    container_name: redisdb
    image: redis
    ports:
      - "6379:6379"
    networks:
      - db


  dennic_healthcare_service:
    container_name: dennic_healthcare_service
    build: ./dennic_healthcare_service
    depends_on:
      - "db"
    ports:
      - "9080:9080"
    networks:
      - db

  dennic_api_gateway:
    container_name: dennic_api_gateway
    build: dennic_api_gateway
    depends_on:
      - "db"
    ports:
      - "9050:9050"
    networks:
      - db

#  dennic_session_service:
#    container_name: dennic_session_service
#    build: ./dennic_session_service
#    depends_on:
#      - "db"
#      - "migrate"
#    ports:
#      - "9060:9060"
#    networks:
#      - db

  dennic_user_service:
    container_name: dennic_user_service
    build: ./dennic_user_service
    depends_on:
      - "db"
    ports:
      - "9070:9070"
    networks:
      - db


  jaeger-all-in-one:
    container_name: jaeger-all-in-one
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - db

  # Collector
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector:latest
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317" # OTLP gRPC receiver
    depends_on:
      - jaeger-all-in-one
    networks:
      - db


  migrate:
    image: migrate/migrate
    container_name: migrate
    networks:
      - db
    volumes:
      - ./migrations:/migrations
    command: [ "-path", "/migrations", "-database",  "postgres://postgres:20030505@db:5432/dennic?sslmode=disable", "up"]
    links:
      - db
    depends_on:
      - db

  minio:
    image: bitnami/minio:2022
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - db
    volumes:
      - minio_data:/minio_data
      - ./config.json:/opt/bitnami/minio/conf/config.json
    environment:
      - MINIO_ROOT_USER=dennic
      - MINIO_ROOT_PASSWORD=dennic_service
      - MINIO_DEFAULT_BUCKETS=department



networks:
  db:
    driver: bridge


volumes:
  db:
  mongodb_data:
    driver: local
  minio_data:
    driver: local
